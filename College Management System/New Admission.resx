<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>